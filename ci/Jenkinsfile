pipeline {
  agent {
    kubernetes {
      yaml """
apiVersion: v1
kind: Pod
spec:
  containers:
  - name: jnlp
    image: harbor.mellanox.com/toolbox/c3po-jnlp:0.0.29
    resources:
      requests:
        memory: "8Gi"
        cpu: "4"
      limits:
        memory: "8Gi"
        cpu: "4"
    securityContext:
      # uid=41522(svc-nbu-c3po-bot)
      runAsUser: 41522
    volumeMounts:
    - mountPath: /labhome
      name: labhome
      mountPropagation: HostToContainer
    - mountPath: /auto
      name: auto
      mountPropagation: HostToContainer

  - name: kaniko
    image: gcr.io/kaniko-project/executor:debug
    imagePullPolicy: Always
    resources:
      requests:
        memory: "8Gi"
        cpu: "4"
      limits:
        memory: "8Gi"
        cpu: "4"
    tty: true
    command:
    - sleep
    args:
    - 9999999
    volumeMounts:
    - mountPath: /labhome
      name: labhome
      mountPropagation: HostToContainer
    - mountPath: /auto
      name: auto
      mountPropagation: HostToContainer

  - name: dind
    image: harbor.mellanox.com/toolbox/devops-tools-build:0.0.13
    imagePullPolicy: Always
    resources:
      requests:
        memory: "8Gi"
        cpu: "4"
      limits:
        memory: "8Gi"
        cpu: "4"
    tty: true
    command: ['cat']
    securityContext:
      # uid=41522(svc-nbu-c3po-bot)
      runAsUser: 41522
    volumeMounts:
    - name: labhome
      mountPath: /labhome
      mountPropagation: HostToContainer
    env:
    - name: DOCKER_HOST
      value: tcp://localhost:2375

  - name: docker-daemon
    image: harbor.mellanox.com/toolbox/devops-tools-build:0.0.13
    securityContext:
      privileged: true
    env:
    - name: DOCKER_TLS_CERTDIR
      value: ""

  volumes:
  - name: labhome
    hostPath:
      path: /labhome
      type: Directory
      readOnly: false
  - name: auto
    hostPath:
      path: /auto
      type: Directory
      readOnly: false
"""
    }
  }

  options {
    timestamps()
    ansiColor("xterm")
  }

  environment {
    DOCKER_REGISTRY = "nvcr.io/nvstaging/mellanox"
    DOCKER_IMAGE_NAME = "doca-driver"
  }

  stages {
    stage("Init") {
      steps {
        sh("""
          echo "FROM alpine" >> Dockerfile
          echo "RUN echo mock > main.txt" >> Dockerfile
        """)
        sh("until nc -vz localhost 2375; do sleep 3; done")
      }
    }

    stage("Precompile build matrices") {
      // ubuntu
      matrix {
        axes {
          axis {
            name "FLAVOR"
            values "generic", "aws", "azure", "oracle", "nvidia"
          }
          axis {
            name "VERSION"
            values "24.04", "22.04"
          }
          axis {
            name "ARCHITECTURE"
            values "linux/amd64", "linux/arm64"
          }
        }
        stages {

          stage("Init") {
            steps {
              sh("""
                echo DOCKER_TAG shall be ubuntu$VERSION-$FLAVOR-$ARCHITECTURE
              """)
            }
          }

          stage("Kaniko") {
            steps {
              container("kaniko") {
                sh("""
                  /kaniko/executor version
                """)
              }
            }
          }

          stage("Docker") {
            steps {
              container("dind") {
                sh("""
                  docker info
                """)
              }
            }
          }

        }
      }

      // rhel & rhcos
      // matrix {
      //   axes {
      //     axis {
      //       name "OS"
      //       values "rhel", "rhcos"
      //     }
      //     axis {
      //       name "VERSION"
      //       values "9.4", "9.3", "9.2", "8.10", "8.9", "8.8", "4.16"
      //     }
      //     axis {
      //       name "ARCHITECTURE"
      //       values "linux/amd64", "linux/arm64"
      //     }
      //     excludes {
      //       exclude {
      //         axis {
      //           name "OS"
      //           values "rhel"
      //         }
      //         axis {
      //           name "VERSION"
      //           values "4.16"
      //         }
      //       }
      //       exclude {
      //         axis {
      //           name "OS"
      //           values "rhel"
      //         }
      //         axis {
      //           name "ARCHITECTURE"
      //           values "linux/arm64"
      //         }
      //       }
      //     }
      //   }
      //   environment {
      //     RH_MAJOR_VERSION_TO_USE_FOR_LATEST_KERNEL_LOOKUPS = "9"
      //   }
      //   stages {

      //     stage("Init") {
      //       steps {
      //         sh("""
      //           echo DOCKER_TAG shall be $OS$VERSION-$ARCHITECTURE
      //         """)
      //       }
      //     }

      //     stage("Kaniko") {
      //       steps {
      //         container("kaniko") {
      //           sh("""
      //             /kaniko/executor version
      //           """)
      //         }
      //       }
      //     }

      //     stage("Docker") {
      //       steps {
      //         container("dind") {
      //           sh("""
      //             docker info
      //           """)
      //         }
      //       }
      //     }

      //   }
      // }

    }
  }
}

