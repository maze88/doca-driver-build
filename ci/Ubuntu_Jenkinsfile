pipeline {
  agent any

  options {
    timestamps()
    ansiColor("xterm")
  }

  parameters {
    string(name: "LATEST_DOCA_VERSION", defaultValue: "24.07-0.6.1.0", description: "The version of the DOCA sources to use")
    booleanParam(name: "PUSH_IMAGES",   defaultValue: false,           description: "For dry-runs, disable pushing images to registry")  // TODO: change `defaultValue` to `true`, after development
  }

  environment {
    NVCR_DOCKER_REGISTRY = "nvcr.io/nvstaging/mellanox"
    DOCKER_IMAGE_NAME = "doca-driver"
  }

  stages {
    stage("Precompile Matrix") {
      matrix {

        axes {
          axis {
            name "ARCHITECTURE"
            values "linux/amd64", "linux/arm64"
          }
          axis {
            name "FLAVOR"
            values "generic" //, "aws", "azure", "oracle", "nvidia"  // TODO: enable full matrix after development
          }
          axis {
            name "OS_VERSION"
            values "24.04" //, "22.04"  // TODO: enable full matrix after development
          }
        }

        stages {
          stage("Trigger downstream job") {
            steps {
              build(job: "precompiled-DOCA-build-downstream", parameters: [
                string(name: "LATEST_DOCA_VERSION", value: "$LATEST_DOCA_VERSION"),
                string(name: "FLAVOR",              value: "$FLAVOR"),
                string(name: "OS",                  value: "ubuntu"),
                string(name: "OS_VERSION",          value: "$OS_VERSION"),
                string(name: "ARCHITECTURE",        value: "$ARCHITECTURE"),
                booleanParam(name: "PUSH_IMAGE",   value: params.PUSH_IMAGES),
              ])
            }
          }
        }

      }
    }
  }
}

