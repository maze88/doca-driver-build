// TODO: decide on and implement a retention policy for nvstaging
// TODO: determine a publishing/promotion strategy for deployments (NGC)
// TODO: ask alex petrovsky about retention in NGC
pipeline {
  agent any

  options {
    timestamps()
    ansiColor("xterm")
  }

  // TODO: talat said in january upstream job will change (check with him towards then)
  parameters {
    string(name: "LATEST_DOCA_VERSION", defaultValue: "24.07-0.6.1.0", description: "The version of the DOCA sources to use")
    booleanParam(name: "PUSH_IMAGES",   defaultValue: true,            description: "For dry-runs, disable pushing images to registry")
  }

  environment {
    NVCR_DOCKER_REGISTRY = "nvcr.io/nvstaging/mellanox"
    DOCKER_IMAGE_NAME = "doca-driver"
  }

  stages {
    stage("Precompile Matrix") {
      matrix {

        axes {
          axis {
            name "ARCHITECTURE"
            values "amd64", "arm64"
          }
          axis {
            name "FLAVOR"
            values "generic"//, "aws", "azure", "oracle", "nvidia"  // TODO: restore matrix after testing
          }
          axis {
            name "OS_VERSION"
            values "24.04"//, "22.04"  // TODO: restore matrix after testing
          }
        }

        stages {
          stage("Trigger downstream job") {
            steps {
              build(
                job: "precompiled-DOCA-build-downstream",
                parameters: [
                  string(name: "LATEST_DOCA_VERSION", value: "$LATEST_DOCA_VERSION"),
                  string(name: "FLAVOR",              value: "$FLAVOR"),
                  string(name: "OS",                  value: "ubuntu"),
                  string(name: "OS_VERSION",          value: "$OS_VERSION"),
                  string(name: "ARCHITECTURE",        value: "$ARCHITECTURE"),
                  booleanParam(name: "PUSH_IMAGE",    value: params.PUSH_IMAGES),
                ],
                wait: true,
              )
            }
          }
        }

      }
    }
  }
}

